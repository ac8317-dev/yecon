package com.yecon.filemanager;import java.io.File;import android.app.Activity;import android.app.Fragment;import android.content.Context;import android.content.Intent;import android.os.Bundle;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.Button;import android.widget.LinearLayout;import android.widget.Toast;import net.micode.fileexplorer.Util;public class FileCategoryFragment extends Fragment implements IFileMiscs.OnViewClickListener,View.OnClickListener,FileStorageStateListener.FileStorageStateChangeCallBack,View.OnLongClickListener {    private static final String Tag = "FileCateFragment";    public Button mButtonSD1;    public Button mButtonSD2;        public Button mButtonUsb1;    public Button mButtonUsb2;    public Button mButtonUsb3;    public Button mButtonUsb4;    public Button mButtonUsb5;        public Button mButtonInternal;    public LinearLayout mButtonRoot;    private String path;        private Button getUSBButton(String name) {    	Context context = getActivity();    	LayoutInflater inflater = null;    	if (context != null) {    		inflater = LayoutInflater.from(context);    	}    	Button button = null;    	if (inflater != null) {    		button = (Button) inflater.inflate(R.layout.button_template,null);    	}    	button.setText(getUSBNameFromPath(name));    	button.setTag(name);    	button.setOnClickListener(this);    	button.setOnLongClickListener(this);    	button.setId(R.id.action_usb);    	return button;    }        private String getUSBNameFromPath(String path) {    	String name = getString(R.string.usb);    	String sufix ="";    	String prefix = FileStorageStateListener.USB_ROOT_PATH+"usbotg-";    	if (path.startsWith(prefix) ){    			int start = prefix.length();    			sufix = path.substring(start);    	}    	return name+sufix;    }    private FileStorageStateListener mStorageStateChangedLisenter;    public interface ICateFragmentOp {        public void onCateFragmentOp(String point);        public String onGetLocation();        public void onPushToBacktask();        public String onGetRootLocation();    }    @Override    public boolean onLongClick(View v) {        //int id = v.getId();        Util.CardInfo info = null;        String path = null;        path =(String)  v.getTag();        /*switch (id) {            case R.id.action_sd:                path = FileStorageStateListener.pathSD;                break;            case R.id.action_internal:                path = Util.getSdDirectory();                break;            default:        }        */        //TODO:add usb later        if (path!=null) {            info = Util.getCardInfo(path);        }        if (info != null) {            path = getString(R.string.storage_total)+ Util.convertStorage(info.total)+","+getString(R.string.storage_free)+Util.convertStorage(info.free);        }        Toast.makeText(getActivity(),path,Toast.LENGTH_LONG).show();        return true;    }    @Override    public void onAttach(Activity activity) {        super.onAttach(activity);        if (mStorageStateChangedLisenter == null) {            mStorageStateChangedLisenter = new FileStorageStateListener(activity,FileCategoryFragment.this);        }        mStorageStateChangedLisenter.register();    }    @Override    public void onDestroy() {        super.onDestroy();        mStorageStateChangedLisenter.unregister();    }    @Override    public void onMediaMounted(String point) {        Log.d(Tag, "mounted point is "+point);        //resetWidgets();        if (point.equals(FileStorageStateListener.pathSD1)) {			reset(mButtonSD1, true);        }else if (point.equals(FileStorageStateListener.pathSD2)) {        	reset(mButtonSD2, true);        }else if (point.equals(FileStorageStateListener.pathUSB1)) {        	reset(mButtonUsb1, true);        }else if (point.equals(FileStorageStateListener.pathUSB2)) {        	reset(mButtonUsb2, true);        }else if (point.equals(FileStorageStateListener.pathUSB3)) {        	reset(mButtonUsb3, true);        }else if (point.equals(FileStorageStateListener.pathUSB4)) {        	reset(mButtonUsb4, true);        }else if (point.equals(FileStorageStateListener.pathUSB5)) {        	reset(mButtonUsb5, true);		} else {        addButton(point);		}    }    @Override    public void onMediaEjected(String point) {        Log.d(Tag, "ejected point is "+point);        //resetWidgets();                if (mStorageStateChangedLisenter != null) {        	if (point.equals(FileStorageStateListener.pathSD1)) {        		reset(mButtonSD1,false);        	}else if (point.equals(FileStorageStateListener.pathSD2)) {        		reset(mButtonSD2,false);        	}else if (point.equals(FileStorageStateListener.pathUSB1)) {        		reset(mButtonUsb1,false);        	}else if (point.equals(FileStorageStateListener.pathUSB2)) {        		reset(mButtonUsb2,false);        	}else if (point.equals(FileStorageStateListener.pathUSB3)) {        		reset(mButtonUsb3,false);        	}else if (point.equals(FileStorageStateListener.pathUSB4)) {        		reset(mButtonUsb4,false);        	}else if (point.equals(FileStorageStateListener.pathUSB5)) {        		reset(mButtonUsb5,false);        	} else {        		removeButton(point);        	}        	}                if (getActivity() instanceof ICateFragmentOp) {            ((ICateFragmentOp) getActivity()).onCateFragmentOp(point);        }    }    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup container,                             Bundle savedInstanceState) {        View v = inflater.inflate(R.layout.fragment_file_category, container, false);        mButtonRoot = (LinearLayout) v.findViewById(R.id.fragment_cate_root);        //sd        mButtonSD1 = (Button) v.findViewById(R.id.action_sd1);        mButtonSD1.setOnClickListener(this);        mButtonSD1.setTag(FileStorageStateListener.pathSD1);                mButtonSD2 = (Button) v.findViewById(R.id.action_sd2);        mButtonSD2.setOnClickListener(this);        mButtonSD2.setTag(FileStorageStateListener.pathSD2);        //usb        mButtonUsb1 = (Button) v.findViewById(R.id.action_usb1);        mButtonUsb1.setOnClickListener(this);        mButtonUsb1.setTag(FileStorageStateListener.pathUSB1);                mButtonUsb2 = (Button) v.findViewById(R.id.action_usb2);        mButtonUsb2.setOnClickListener(this);        mButtonUsb2.setTag(FileStorageStateListener.pathUSB2);                mButtonUsb3 = (Button) v.findViewById(R.id.action_usb3);        mButtonUsb3.setOnClickListener(this);        mButtonUsb3.setTag(FileStorageStateListener.pathUSB3);                mButtonUsb4 = (Button) v.findViewById(R.id.action_usb4);        mButtonUsb4.setOnClickListener(this);        mButtonUsb4.setTag(FileStorageStateListener.pathUSB4);                mButtonUsb5 = (Button) v.findViewById(R.id.action_usb5);        mButtonUsb5.setOnClickListener(this);        mButtonUsb5.setTag(FileStorageStateListener.pathUSB5);        mButtonInternal = (Button) v.findViewById(R.id.action_internal);        mButtonInternal.setOnClickListener(this);        mButtonInternal.setTag(Util.getSdDirectory());                mButtonSD1.setOnLongClickListener(this);        mButtonSD2.setOnLongClickListener(this);                mButtonUsb1.setOnLongClickListener(this);        mButtonUsb2.setOnLongClickListener(this);        mButtonUsb3.setOnLongClickListener(this);        mButtonUsb4.setOnLongClickListener(this);        mButtonUsb5.setOnLongClickListener(this);                mButtonInternal.setOnLongClickListener(this);        resetWidgets();        return v;    }       @Overridepublic void onActivityCreated(Bundle savedInstanceState) {	// TODO Auto-generated method stub	super.onActivityCreated(savedInstanceState);   }  private String getPath() {	if (path == null) {		Activity activity = getActivity();		if (activity instanceof ICateFragmentOp){			path = ((ICateFragmentOp) activity).onGetRootLocation();			//Log.d(Tag,path);		}		}	return path;}      @Overridepublic void onResume() {	// TODO Auto-generated method stub	super.onResume();	buttonSelected(getPath());	}   private void buttonSelected(String path) {	if (path != null) {	String location = path;	setButtonActivated(location);}}	private void addButton(String name) {				if (mButtonRoot != null) {			mButtonRoot.addView(getUSBButton(name));		}	}		private void setButtonActivated(String name) {		if (mButtonRoot != null) {			View v = mButtonRoot.findViewWithTag(name);			if (v != null) {				v.setActivated(true);			}		}	}		private void removeButton(String name) {		if (mButtonRoot != null) {			View v = mButtonRoot.findViewWithTag(name);			if (v != null) {				mButtonRoot.removeView(v);			}		}	}    private void resetWidgets() {        if (mStorageStateChangedLisenter != null) {            reset(mButtonSD1,mStorageStateChangedLisenter.isSD1Mounted());            reset(mButtonSD2,mStorageStateChangedLisenter.isSD2Mounted());                        reset(mButtonUsb1,mStorageStateChangedLisenter.isUsb1Mounted());            reset(mButtonUsb2,mStorageStateChangedLisenter.isUsb2Mounted());            reset(mButtonUsb3,mStorageStateChangedLisenter.isUsb3Mounted());            reset(mButtonUsb4,mStorageStateChangedLisenter.isUsb4Mounted());            reset(mButtonUsb5,mStorageStateChangedLisenter.isUsb5Mounted());        }        if (mButtonRoot != null) {        	File[] paths = mStorageStateChangedLisenter.getUSBMountedPoints();        	if (paths != null) {        		int size = paths.length;        		for(int i=0;i<size;++i) {        			String usbPath = paths[i].getAbsolutePath();        			Log.d(Tag, "init usb path is "+ usbPath);        			addButton(usbPath);        		}        	}        }            }    private void reset(View v, boolean is) {        if (v != null) {            v.setVisibility(is ? View.VISIBLE : View.GONE);            v.setClickable(is);        }    }    @Override    public void onClick(View v) {        if (getActivity() instanceof View.OnClickListener) {            ((View.OnClickListener) getActivity()).onClick(v);        }        onViewClick(v);    }        @Override    public boolean onViewClick(View v) {       String tag = (String) v.getTag();       startActivity(tag);        return false;    }    private boolean isNeedStart(String path) {        Activity activity = getActivity();        boolean isNeedStart = true;        if (activity != null && activity instanceof ICateFragmentOp) {            ICateFragmentOp i = (ICateFragmentOp)activity;            String location = i.onGetLocation();            if (location.equals(path)) {                isNeedStart = false;            } else {                i.onPushToBacktask();            }        }        return isNeedStart;    }    //TODO:    private void startActivity(String path) {        Activity activity = getActivity();        boolean isNeedStart = true;        if (activity != null && activity instanceof ICateFragmentOp) {            ICateFragmentOp i = (ICateFragmentOp)activity;            String location = i.onGetLocation();            if (location.equals(path)) {                isNeedStart = false;            } else {                i.onPushToBacktask();                activity.finish();            }        }        if (isNeedStart) {            Intent intent = new Intent(getActivity(), MainActivity.class);            intent.putExtra(FileManagerApp.Tag, path);            //intent.setFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);            startActivity(intent);        }    }}